{"version":3,"sources":["Algorithms/MergeSort.js","Algorithms/RemoveButtons.js","SortingAnimation/Animation.js","Visualizer/SortingVisualizer.jsx","Algorithms/ArrayGenerator.js","Algorithms/BubbleSort.js","Algorithms/SelectionSort.js","Algorithms/InsertionSort.js","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","tempArray","slice","mergeSorter","mainArray","startIdx","endIdx","auxiliaryArray","middleIdx","Math","floor","k","i","j","push","doMerge","removeButton","document","querySelectorAll","forEach","button","disabled","performAnimation","a","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","style","barOneStyle","barTwoStyle","helper","newHeight","secondHelper","color","setTimeout","backgroundColor","height","SortingVisualizer","props","generateNewArray","arr","limit","window","innerWidth","val","random","generator","setState","bubbleSort","animationsArray","len","tmp","getBuubleSortAnimations","state","then","querySelector","selectionSort","minIndex","min","n","getSelectionSortAnimations","insertionSort","swapped","key","getInsertionSortAnimations","mergeSort","clear","location","reload","this","addEventListener","bind","className","map","idx","id","onClick","React","Component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b63c78d.chunk.js","sourcesContent":["export default function getMergeSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    const tempArray = array.slice();\n    mergeSorter(array, 0, array.length - 1, tempArray, animations);\n    return animations;\n  }\n  \n  function mergeSorter(mainArray,startIdx,endIdx,auxiliaryArray,animations) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSorter(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    mergeSorter(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n  }\n  \n  function doMerge(mainArray,startIdx,middleIdx,endIdx,auxiliaryArray,animations) {\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n\n    while (i <= middleIdx && j <= endIdx) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n          animations.push([k, auxiliaryArray[i]]);\n          mainArray[k++] = auxiliaryArray[i++];\n      } \n      \n      else {\n          animations.push([k, auxiliaryArray[j]]);\n          mainArray[k++] = auxiliaryArray[j++];\n      }\n\n    }\n\n    while (i <= middleIdx) {\n      animations.push([i, i]);\n      animations.push([i, i]);\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    }\n\n    while (j <= endIdx) {\n      animations.push([j, j]);\n      animations.push([j, j]);\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }","\nexport default function removeButton () {\n    let buttons = document.querySelectorAll(\".btn\");\n    buttons.forEach((button) => {\n        button.disabled = true;\n    })\n}\n\n\n","\nconst PRIMARY_COLOR = 'yellow';\nconst SECONDARY_COLOR = 'darkred';\nconst ANIMATION_SPEED_MS = 3;\n\nexport default async function performAnimation (array) {\n\n      const animations = await array;\n\n      for (let i = 0; i < animations.length; i++) {\n  \n          const arrayBars = document.getElementsByClassName('bar');\n          const isColorChange = (i % 3 !== 2)\n  \n          if (isColorChange) {\n              const [barOneIdx, barTwoIdx] = await animations[i];\n              const barOneStyle = await arrayBars[barOneIdx].style;\n              const barTwoStyle = await arrayBars[barTwoIdx].style;\n              const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n              helper(barOneStyle,barTwoStyle,color,i)\n          }\n          \n          else {\n              const [barOneIdx, newHeight] = await animations[i];\n              const barOneStyle = await arrayBars[barOneIdx].style;\n              secondHelper(barOneStyle,newHeight,i)\n          } \n      }\n};\n\nfunction helper(barOneStyle,barTwoStyle,color,i){\n  setTimeout(() => { \n    barOneStyle.backgroundColor = color;\n    barTwoStyle.backgroundColor = color;\n  }, i * ANIMATION_SPEED_MS);\n}\n\nfunction secondHelper(barOneStyle,newHeight,i){\n  setTimeout(() => { \n    barOneStyle.height = `${newHeight}px`;\n  }, i * ANIMATION_SPEED_MS);\n}","import React from 'react'\nimport './SortingVisualizer.css'\nimport getBuubleSortAnimations from '../Algorithms/BubbleSort'\nimport getSelectionSortAnimations from '../Algorithms/SelectionSort'\nimport getInsertionSortAnimations from '../Algorithms/InsertionSort'\nimport getMergeSortAnimations from '../Algorithms/MergeSort'\nimport generator from '../Algorithms/ArrayGenerator'\nimport removeButton from '../Algorithms/RemoveButtons'\nimport performAnimation from '../SortingAnimation/Animation'\nconst PRIMARY_COLOR = 'yellow';\n\nexport default class SortingVisualizer extends React.Component {\n\n    //constructor\n    constructor(props){\n        super(props);\n        this.state ={\n            array:[],\n        }\n    }\n    //reload the page\n    componentDidMount(){\n        this.generateNewArray();\n        window.addEventListener(\"resize\", this.generateNewArray.bind(this));\n    }\n    \n    //create a new array of random numbers\n    generateNewArray = () => {\n        let arr = generator();\n        this.setState({\n            array:arr\n        })\n    }\n\n    //bubbleSort button implementation\n    bubbleSort = () => {\n        removeButton();\n        const animations = getBuubleSortAnimations(this.state.array);\n        performAnimation(animations).then(document.querySelector('#clear').disabled = false)\n        \n    }\n\n    //selectionSort button implementation\n    selectionSort = () => {\n        removeButton();\n        const animations = getSelectionSortAnimations(this.state.array);\n        performAnimation(animations).then(document.querySelector('#clear').disabled = false)\n    }\n\n    //insertionSort button implementation\n    insertionSort = () => {\n        removeButton();\n        const animations = getInsertionSortAnimations(this.state.array);\n        performAnimation(animations).then(document.querySelector('#clear').disabled = false)\n\n    }\n\n    //mergeSort button implementation\n    mergeSort = () => {\n        removeButton();\n        const animations = getMergeSortAnimations(this.state.array);\n        performAnimation(animations).then(document.querySelector('#clear').disabled = false)\n\n    }\n    \n    //reload screen on clear button\n    clear = () => {\n        window.location.reload(false); \n        return false;\n    }\n\n  render() {\n    \n    return (\n\n        <div className = \"TotalContainer\">\n            <h2 className = \"heading\" >ALGORITHM VISUALIZER</h2>\n\n            <div className = \"mainContainer\">\n                <div className = \"arrayContainer\">\n\n                    {this.state.array.map((val,idx) => (\n                        <div \n                            className = \"bar\" \n                            key = {idx} \n                            style = {{\n                                backgroundColor: PRIMARY_COLOR,\n                                height: `${val}px`\n                            }}> \n                        </div>\n                    ))}\n                    \n                </div>\n\n                <div className = \"btnContainer\">\n                    <h2 className = \"btnh2\"> Sorting Algorithm Visualizer</h2>\n                    <button id = \"newArray\" className = \"btn\" onClick = {this.generateNewArray} >Generate New Array</button>\n                    <button id = \"bubble\" className = \"btn\" onClick = {this.bubbleSort}  >Bubble Sort</button>\n                    <button id = \"selection\" className = \"btn\" onClick = {this.selectionSort}  >Selection Sort</button>\n                    <button id = \"insertion\" className = \"btn\" onClick = {this.insertionSort}  >Insertion Sort</button>\n                    <button id = \"merge\" className = \"btn\" onClick = {this.mergeSort}  >Merge Sort</button>\n                    <button id = \"clear\" className = \"btn\" onClick = {this.clear}  >Clear</button>\n                    <p>\n                        \n                        <h2 className = \"complexity\"> Time Complexity</h2>\n                        <table className = \"tableDetails\">\n                            <tr>\n                                <th>Algorithm</th>\n                                <th>Best Case</th>\n                                <th>Worst Case</th>\n                            </tr>\n                            <tr>\n                                <td>Bubble Sort</td>\n                                <td>O(n^2)</td>\n                                <td>O(n^2)</td>\n                            </tr>\n                            <tr>\n                                <td>Selection Sort</td>\n                                <td>O(n^2)</td>\n                                <td>O(n^2)</td>\n                            </tr>\n                            <tr>\n                                <td>Insertion Sort</td>\n                                <td>O(n^2)</td>\n                                <td>O(n^2)</td>\n                            </tr>\n                            <tr>\n                                <td>Merge Sort</td>\n                                <td>O(n log(n))</td>\n                                <td>O(n log(n))</td>\n                            </tr>\n                        </table>\n                        \n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n","\nexport default function generator () {\n\n    const array = [];\n    let limit;\n\n    if(window.innerWidth <= 500 && window.innerWidth > 400){\n        limit = 66;\n    }\n\n    if(window.innerWidth <= 400){\n        limit = 30\n    }\n    \n    else{\n        limit = window.innerWidth/7;\n    }\n\n    for(let i = 0; i < limit ; i++){\n        let val = Math.floor(Math.random() * (650-5+1) + 5); \n        array.push(val);\n    }\n    return array;\n};\n\n\n","\nexport default function getBuubleSortAnimations (array) {\n    \n    const animationsArray = []\n    let len = array.length;\n\n    for (let i = 0; i < len; i++) {\n        for (let j = 0; j < len-1; j++) {\n\n            animationsArray.push([j,j+1]);\n            animationsArray.push([j,j+1]);\n\n            if (array[j] > array[j + 1]) {\n                animationsArray.push([j, array[j+1]])\n                let tmp = array[j];\n                array[j] = array[j + 1];\n                array[j + 1] = tmp;\n            }\n            else{\n                animationsArray.push([j, array[j]])\n            }\n\n        }\n\n        animationsArray.push([len-2,len-1])\n        animationsArray.push([len-2,len-1])\n        animationsArray.push([len-1, array[len-1]])\n    }\n\n    return animationsArray;\n};\n\n\n","\nexport default function getSelectionSortAnimations (array) {\n    \n    const animationsArray = []\n\n    for(let i = 0; i < array.length-1; i++){\n        let minIndex = i;\n\n\n        for(let j = i+1; j < array.length; j++){\n\n            animationsArray.push([j,minIndex]);\n            animationsArray.push([j,minIndex]);\n            animationsArray.push([j,array[j]])\n            if(array[j] < array[minIndex]){\n                minIndex = j;\n            }\n        }\n\n        let min = array[minIndex]\n\n        animationsArray.push([i,i+1]);\n        animationsArray.push([i,i+1]);\n        animationsArray.push([i,min])\n\n        let tmp = array[minIndex];\n        array[minIndex] = array[i];\n        array[i] = tmp;\n\n    }\n\n    let n = array.length;\n    animationsArray.push([n-2,n-1]);\n    animationsArray.push([n-2,n-1]);\n    animationsArray.push([n-1,array[n-1]]);\n    return animationsArray;\n};\n\n\n","\nexport default function getInsertionSortAnimations (array) {\n\n    const animationsArray = []\n    let n = array.length; \n    let swapped = false;\n\n    for (let i = 1; i < n; i++) { \n\n        let key = array[i]; \n        let j = i - 1;\n\n        if(array[j] < key){\n            animationsArray.push([j,i]);\n            animationsArray.push([j,i]);\n            animationsArray.push([j,array[j]]);\n            swapped = false;\n        }\n\n        else{\n            swapped = true;\n\n            while (j >= 0 && array[j] > key) {\n\n                animationsArray.push([j,i])\n                animationsArray.push([j,i])\n                animationsArray.push([j+1,array[j]])\n                array[j + 1] = array[j];\n                j = j - 1; \n    \n            }\n\n        }\n\n        array[j + 1] = key;\n        \n        if(swapped){\n            animationsArray.push([j+1,j+2])\n            animationsArray.push([j+1,j+2])\n            animationsArray.push([j+1,key])\n        }\n\n    }\n\n    return animationsArray;\n};\n\n","import React from 'react';\nimport VisualizerComponent from './Visualizer/SortingVisualizer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VisualizerComponent></VisualizerComponent>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}